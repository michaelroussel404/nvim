{
    // Enable debug mode to view errors in the console.
    "debug": false,

    // Auto open the console panel whenever formatting failed.
    // This is useful when combined with "debug": true
    "open_console_on_failure": false,

    // Display results in the status bar.
    // The displayed abbreviation for the current settings mode:
    // PUS: Persistent User Settings
    // PQO: Persistent Quick Options
    // TQO: Temporary Quick Options
    "show_statusbar": true,

    // Display a real-time word and character count in the status bar.
    // By default, whitespace is not included in the character count.
    "show_words_count": {
        "enable": true,
        "ignore_whitespace_char": true
    },

    // Remember and restore cursor position, selections, selected
    // syntax and bookmarks each time a file is closed and re-opened.
    // This is helpful to resume your work from where you left off.
    "remember_session": true,

    // Configure the layout when opening new files.
    // This setting takes effect when the "new_file_on_format" option is enabled.
    // Available choices include 2-columns, 2-rows or single layout.
    // To revert to the Sublime default layout:
    // View > Layout > Single
    // Accepted values: "2cols", "2rows", "single" or false
    "layout": {
        "enable": "2cols",
        "sync_scroll": true
    },

    // A set of directories where executable programs are located.
    // It can be absolute paths to module directories, python zipfiles.
    // Any environment variables like PATH, PYTHONPATH, GEM_PATH, TMPDIR etc.
    // can be added here.
    // This option is similar to running 'export PYTHONPATH="/path/to/my/site-packages"'
    // from terminal. But it is only temporary in the memory and will only apply
    // for the current formatting session.
    // Non-existent environment directories and files will be silently ignored.
    // This option can be ommitted, but for python and ruby you probably need
    // to add it, either persistently via ~/.bashrc, ~/.zshrc, ~/.profile or here.
    "environ": {
        "PATH": [],
        "GEM_PATH": [],
        "PYTHONPATH": []
    },

    // THIRD-PARTY FORMATTING PLUGINS
    "formatters": {
        "example": {
            // Disable and remove plugin from being shown in the menu.
            "disable": false,

            // Auto formatting whenever the current file/view is being saved.
            // This option should be used for plugins with unique syntaxes.
            // For plugins with the same syntaxes, the first plugin takes precedence.
            // Remove the identical syntaxes from one of the plugins to avoid conflicts.
            // For example:
            // Plugin A (enabled): syntaxes ["css", "js"]
            // Plugin B (enabled): syntaxes ["html", "css"]
            // In the case you want to use Plugin B with "css", then you should remove
            // the "css" from plugin A or just disable it, as there is no guarantee of the
            // execution order between the two, and determining your favorist is not possible.
            // The Quick Options feature can help in this scenario.
            "format_on_save": false,

            // Auto formatting whenever code is pasted into the current file/view.
            // The conditions and solution for this option are identical to those of
            // the "format_on_save" option mentioned above.
            "format_on_paste": false,

            // Create a new file containing formatted codes.
            // The value of this option is the suffix of the new file being renamed.
            // Suffix must be of type string. =true, =false and all other types imply =false
            // Note: It will overwrite any existing file that has the same new name in
            // the same location.
            // For example:
            // "new_file_on_format": "min", will create a new file:
            // myfile.raw.js -> myfile.raw.min.js
            "new_file_on_format": false,

            // Recursively format the entire folder with unlimited depth.
            // This option requires an existing and currently opened file
            // to serve as the starting point.
            // For the sake of convenience, two new folders will be created at
            // the same level as the file, which will contain all failed and
            // successfully formatted files. The "new_file_on_format" option
            // might be useful for renaming if needed.
            // The "format_on_save" option above, which applies only to
            // single files, does not take effect here.
            // All none-text files (binary) will be automatically ignored.
            // Note: Placing files directly on the Desktop or elsewhere without
            // enclosing them within a folder can lead to accidental formatting.
            // Any literal "$" must be escaped to "\\$" to distinguish it from
            // the variable expansion "${...}". This important rule applies
            // to the entire content of this settings file!
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": ["Spotlight-V100", "temp", "cache", "logs", "^_.*?tits\\$"],
                "exclude_files_regex": ["show_tits.sx", ".*?ball.js", "^._.*?"],
                "exclude_extensions": ["DS_Store", "localized", "TemporaryItems", "Trashes", "db", "ini", "git", "svn", "tmp", "bak"],
                "exclude_syntaxes": []
            },

            // Syntax support based on the scope name, not file extension.
            // Syntax name is part of the scope name and can be retrieved from:
            // Tools > Developer > Show Scope Name
            // End-users are advised to consult plugin documentation to add more syntaxes.
            "syntaxes": ["css", "html", "js", "php"],

            // Exclude a list of syntaxes for an individual syntax key.
            // A list of excluded syntaxes can be applied to all syntax definitions.
            // In this case, the key must be named: "all".
            // This option is useful to exclude part of the scope selector.
            // For example: text.html.markdown, want html but wish to filter out markdown.
            "exclude_syntaxes": {
                "html": ["markdown"],
                "all": ["markdown"]
            },

            // Path to the interpreter to run the third-party plugin.
            // Just for the sake of completeness, but it is unlikely that you will ever need
            // to use this option. Most of the programs you have installed are usually set
            // to run in the global environment, such as Python, Node.js, Ruby, PHP, etc.
            // Formatter is able to detect and automatically set them for you.
            // However, if you do need to use a specific interpreter, you can provide the path.
            "interpreter_path": "${HOME}/example/path/to\\$my/java.exe",

            // Path to the third-party plugin executable to process formatting.
            // System variable expansions like ${HOME} and Sublime Text specific
            // ${packages}, ${file_path} etc. can be used to assign paths. More:
            // https://www.sublimetext.com/docs/build_systems.html#variables
            // Note: Again, any literal "$" must be escaped to "\\$" to distinguish
            // it from the variable expansion "${...}".
            "executable_path": "${HOME}/example/path/to\\$my/php-cs-fixer.phar",

            // Path to the config file for each individual syntaxes.
            // Syntax keys must match those in the "syntaxes" option above.
            // A single config file can be used to assign to all syntaxes.
            // In this case the key must be named: "default"
            // Formatter provides a set of default config files under
            // "formatter.assets/config" folder for your personal use.
            // Do not use the reference files with suffix '.master.' directly.
            // These files could be overwritten by any release updates.
            "config_path": {
                "css": "${packages}/User/formatter.assets/config/only_css_rc.json",
                "php": "${packages}/User/formatter.assets/config/only_php_rc.json",
                "default": "${packages}/User/formatter.assets/config/css_plus_js_plus_php_rc.json"
            },

            // Array of additional arguments for the command line.
            "args": ["--basedir", "./example/my/baseball", "--show-tits", "yes"],

            // Manipulate hardcoded command-line arguments.
            // This option allow you to modify hardcoded parameters, values and
            // their positions without digging into the source code.
            // Note: Hardcoded args can be changed (rarely) by any release updates.
            // Enable debug mode will help to find all current hardcoded args.
            // Use "args" option above to add, this option to remove or manipulate.
            // Using regex: Again, any literal "$" must be escaped to "\\$" to
            // distinguish it from the variable expansion "${...}". Accepted args:
            // [search, [replace, [index, count, new position]]], where:
            // - search:   @type:str (regex)
            // - replace:  @type:str
            // - index:    @type:int (the number is known as a list index); required!
            // - count:    @type:int (the matching occurrences per index, 0 = all); required!
            // - position: @type:int (move old index pos. to new/old one, -1 = delete index); required!
            "fix_commands": [
                ["--autocorrect", "--autocorrect-all", 4, 0, 4], // no index pos change
                ["^.*?auto.*\\$", "--with", 4, 1, 5], // using escaped "\\$" regex, move index 4 to pos 5
                ["${packages}/to/old", "${packages}/to/new", 3, 0, 3], // variable expansion, no escaped "$"
                ["css", 5, 0, 7], // replace the value in index 5 with "css", move it to pos 7
                [3, 0, 4], // just move index 3 to the new pos 4. (count 0 irrelevant)
                [2, 0, -1], // just delete the index 2. (count 0 irrelevant)
                ["--show-tits", "xxx", 2, 0, -1] // enough tits, pop it out. ("xxx", 2, 0 irrelevant)
            ]
        },
        "beautysh": {
            "info": "https://github.com/lovesegfault/beautysh",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["bash"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/beautysh_rc.json"
            }
        },
        "black": {
            "info": "https://github.com/ambv/black",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["python"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/black_rc.toml"
            }
        },
        "clangformat": {
            "info": "https://clang.llvm.org/docs/ClangFormat.html",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["c", "cs", "c++", "objc", "objc++", "js", "tsx", "jsx", "json", "java", "proto", "protodevel", "td", "sv", "svh", "v", "vh"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/clang_format_llvm_rc.yaml"
            }
        },
        "csscomb": {
            "info": "https://github.com/csscomb/csscomb.js",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["css", "scss", "sass", "less"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/csscomb_rc.json"
            }
        },
        "eslint": {
            "info": "https://github.com/eslint/eslint",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["js"],
            "executable_path": "",
            "args": ["--resolve-plugins-relative-to", "/path/to/javascript/node_modules"],
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/eslint_rc.json"
            }
        },
        "htmltidy": {
            "info": "https://github.com/htacg/tidy-html5",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["html", "xml"],
            "executable_path": "",
            "config_path": {
                "html": "${packages}/User/formatter.assets/config/htmltidy_html_rc.cfg",
                "xml": "${packages}/User/formatter.assets/config/htmltidy_xml_rc.cfg"
            }
        },
        "jsbeautifier": {
            "info": "https://github.com/beautify-web/js-beautify",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["js", "css", "html", "json", "tsx", "vue"],
            "exclude_syntaxes": {
                "html": ["markdown"]
            },
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/jsbeautify_rc.json"
            }
        },
        "jsonmax": {
            "info": "build-in",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["json"],
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/jsonmax_rc.json"
            }
            /* build-in, no executable */
        },
        "perltidy": {
            "info": "https://github.com/perltidy/perltidy",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["perl"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/perltidy_rc.cfg"
            }
        },
        "phpcsfixer": {
            "info": "https://github.com/FriendsOfPHP/PHP-CS-Fixer",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["php"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/php_cs_fixer_rc.php"
            }
        },
        "prettier": {
            "info": "https://github.com/prettier/prettier",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["css", "scss", "less", "js", "jsx", "json", "html", "graphql", "markdown", "tsx", "vue", "yaml"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/prettier_rc.json"
            }
        },
        "prettydiffmax": {
            "info": "https://github.com/prettydiff/prettydiff",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["css", "scss", "less", "js", "jsx", "json", "html", "asp", "xml", "tsx"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/prettydiffmax_rc.json"
            }
        },
        "prettytable": {
            "info": "https://github.com/jazzband/prettytable",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["csv", "text"],
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/prettytable_rc.json"
            }
            /* build-in, no executable */
        },
        "rubocop": {
            "info": "https://github.com/rubocop-hq/rubocop",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["ruby"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/rubocop_rc.yml"
            }
        },
        "shfmt": {
            "info": "https://github.com/mvdan/sh",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["bash"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/shfmt_rc.json"
            }
        },
        "sqlformatter": {
            "info": "https://github.com/sql-formatter-org/sql-formatter",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["sql"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/sql_formatter_rc.json"
            }
        },
        "stylelint": {
            "info": "https://github.com/stylelint/stylelint",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["css", "scss", "sass", "less", "sss", "sugarss"],
            "executable_path": "",
            "args": ["--config-basedir", "/path/to/javascript/node_modules"],
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/stylelint_rc.json"
            }
        },
        "swiftformat": {
            "info": "https://github.com/nicklockwood/SwiftFormat",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["swift"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/swiftformat_rc.cfg"
            }
        },
        "uncrustify": {
            "info": "https://github.com/uncrustify/uncrustify",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["c", "c++", "cs", "d", "es", "objc", "objc++", "java", "pawn", "vala"],
            "executable_path": "",
            "config_path": {
                "java": "${packages}/User/formatter.assets/config/uncrustify_sun_java_rc.cfg",
                "objc": "${packages}/User/formatter.assets/config/uncrustify_objc_rc.cfg",
                "objc++": "${packages}/User/formatter.assets/config/uncrustify_objc_rc.cfg",
                "default": "${packages}/User/formatter.assets/config/uncrustify_rc.cfg"
            }
        },
        "yapf": {
            "info": "https://github.com/google/yapf",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["python"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/yapf_rc.yapf"
            }
        },
        "cleancss": {
            "info": "https://github.com/jakubpawlowicz/clean-css-cli",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["css", "scss", "sass", "less"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/cleancss_rc.json"
            }
        },
        "htmlminifier": {
            "info": "https://github.com/kangax/html-minifier",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["html", "xml"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/htmlminifier_rc.json"
            }
        },
        "jsonmin": {
            "info": "build-in",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["json"]
            /* build-in, no executable, no config */
        },
        "prettydiffmin": {
            "info": "https://github.com/prettydiff/prettydiff",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["css", "scss", "less", "js", "jsx", "json", "html", "asp", "xml", "tsx"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/prettydiffmin_rc.json"
            }
        },
        "pythonminifier": {
            "info": "https://github.com/dflook/python-minifier",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["python"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/python_minifier_rc.json"
            }
        },
        "shfmtmin": {
            "info": "https://github.com/mvdan/sh",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["bash"],
            "executable_path": ""
            /* no config */
        },
        "sqlmin": {
            "info": "https://github.com/bitst0rm",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["sql"],
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/sqlmin_rc.json"
            }
            /* build-in, no executable */
        },
        "terser": {
            "info": "https://github.com/terser-js/terser",
            "disable": false,
            "format_on_paste": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["js"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/terser_rc.json"
            }
        }
    }
}